version: '3'

services:

  prometheus:
    image: 'prom/prometheus:v2.32.1'
    container_name: 'prometheus'
    restart: 'unless-stopped'
    user: root
    labels:
    - 'traefik.enable=true'
    - 'traefik.http.routers.prometheus.rule=Host(`prometheus.docker.localhost`)'
    - 'traefik.http.routers.prometheus.tls=true'
    - 'traefik.http.services.prometheus.loadbalancer.server.port=9090'
    command:
    - '--storage.tsdb.retention.time=2h'
    - '--config.file=/etc/prometheus/prometheus.yaml'
    - '--storage.tsdb.path=/prometheus'
    - '--web.console.libraries=/usr/share/prometheus/console_libraries'
    - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
    - './prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro'
    - './prometheus/rules:/etc/prometheus/rules:ro'
    - 'prometheus-data:/prometheus'
    networks:
    - 'public-subnet'

  grafana:
    image: 'grafana/grafana:8.3.3'
    container_name: grafana
    restart: 'unless-stopped'
    user: "472"
    environment:
    - 'GF_SERVER_ROOT_URL=https://grafana.docker.localhost'
    - 'GF_SECURITY_ADMIN_USER=admin'
    - 'GF_SECURITY_ADMIN_PASSWORD=changeme'
    - 'GF_USERS_ALLOW_SIGN_UP=false'
    labels:
    - 'traefik.enable=true'
    - 'traefik.http.routers.grafana.rule=Host(`grafana.docker.localhost`)'
    - 'traefik.http.routers.grafana.tls=true'
    - 'traefik.http.services.grafana.loadbalancer.server.port=3000'
    volumes:
    - 'grafana-data:/var/lib/grafana'
    - './grafana/provisioning:/etc/grafana/provisioning:ro'
    networks:
    - 'public-subnet'

volumes:

  prometheus-data: {}
  grafana-data: {}

networks:

  public-subnet:
    external: true